from math import sqrt as รากที่สอง


def ඞ(ก): return float(ก)


จำนวนเต็ม = int
จำนวนจุดลอยตัว = float
เมธอดแบบคงที่ = staticmethod
พิมพ์สู่เอสทีดีเอาท์ = print
ข้อมูลนำเข้าจากเอสทีดีอิน = input
ดำเนินการคำสั่งจากเอสทีดีอิน = exec


def ปัดให้เป็นทศนิยม๕หลัก(ก: จำนวนจุดลอยตัว) -> จำนวนจุดลอยตัว:
    return round(ก, จำนวนเต็ม(ඞ("๕")))


class สูตรคำนวณอะไรไม่รู้ผมเกลียดชีวะ:

    @เมธอดแบบคงที่
    def Mosteller(น้ำหนักในหน่วยกิโลกรัม: จำนวนจุดลอยตัว, ส่วนสูงในหน่วยเซนติเมตร: จำนวนจุดลอยตัว) -> จำนวนจุดลอยตัว:
        return รากที่สอง(น้ำหนักในหน่วยกิโลกรัม * ส่วนสูงในหน่วยเซนติเมตร) / ඞ("๖๐")

    @เมธอดแบบคงที่
    def DuBois(น้ำหนักในหน่วยกิโลกรัม: จำนวนจุดลอยตัว, ส่วนสูงในหน่วยเซนติเมตร: จำนวนจุดลอยตัว) -> จำนวนจุดลอยตัว:
        return ඞ("๐.๐๐๗๑๘๔") * น้ำหนักในหน่วยกิโลกรัม ** ඞ("๐.๔๒๕") * ส่วนสูงในหน่วยเซนติเมตร ** ඞ("๐.๗๒๕")

    @เมธอดแบบคงที่
    def ふじもと(น้ำหนักในหน่วยกิโลกรัม: จำนวนจุดลอยตัว, ส่วนสูงในหน่วยเซนติเมตร: จำนวนจุดลอยตัว) -> จำนวนจุดลอยตัว:
        return ඞ("๐.๐๐๘๘๘๓") * น้ำหนักในหน่วยกิโลกรัม ** ඞ("๐.๔๔๔") * ส่วนสูงในหน่วยเซนติเมตร ** ඞ("๐.๖๖๓")


mosteller = สูตรคำนวณอะไรไม่รู้ผมเกลียดชีวะ.Mosteller
du_bois = สูตรคำนวณอะไรไม่รู้ผมเกลียดชีวะ.DuBois
fujimoto = สูตรคำนวณอะไรไม่รู้ผมเกลียดชีวะ.ふじもと


def main():
    น้ำหนักรับเข้า = จำนวนจุดลอยตัว(ข้อมูลนำเข้าจากเอสทีดีอิน())
    ส่วนสูงนำเข้า = จำนวนจุดลอยตัว(ข้อมูลนำเข้าจากเอสทีดีอิน())

    พิมพ์สู่เอสทีดีเอาท์("Mosteller =", ปัดให้เป็นทศนิยม๕หลัก(สูตรคำนวณอะไรไม่รู้ผมเกลียดชีวะ.Mosteller(
        น้ำหนักรับเข้า, ส่วนสูงนำเข้า)))
    พิมพ์สู่เอสทีดีเอาท์("Du Bois =", ปัดให้เป็นทศนิยม๕หลัก(สูตรคำนวณอะไรไม่รู้ผมเกลียดชีวะ.DuBois(
        น้ำหนักรับเข้า, ส่วนสูงนำเข้า)))
    พิมพ์สู่เอสทีดีเอาท์("Fujimoto =", ปัดให้เป็นทศนิยม๕หลัก(สูตรคำนวณอะไรไม่รู้ผมเกลียดชีวะ.ふじもと(
        น้ำหนักรับเข้า, ส่วนสูงนำเข้า)))


ดำเนินการคำสั่งจากเอสทีดีอิน(ข้อมูลนําเข้าจากเอสทีดีอิน())
